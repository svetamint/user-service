apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: user-service-api
  description: gRPC API for User Service
  owner: team-b
spec:
  type: grpc
  definition: |
    syntax = "proto3";

    package user;

    import "google/protobuf/empty.proto";
    import "google/protobuf/wrappers.proto";
    import "validate/validate.proto";

    option java_package = "com.godeltech.grpc.user";
    option java_multiple_files = true;

    message UserDto {
      uint64 id = 1 [(validate.rules).uint64.gte = 1];
      string first_name = 2 [(validate.rules).string.pattern = "[a-zA-Z]+"];
      string last_name = 3 [(validate.rules).string.pattern = "[a-zA-Z]+"];
      string email = 4  [(validate.rules).string.email = true];
      string phone_number = 5 [(validate.rules).string.pattern = "[+]?\\d+"];
    }

    message UserListDto {
      int32 count = 1;
      repeated UserDto user = 2;
    }

    message CreateUserDto {
      string first_name = 1 [(validate.rules).string.pattern = "[a-zA-Z]+"];
      string last_name = 2 [(validate.rules).string.pattern = "[a-zA-Z]+"];
      string email = 3 [(validate.rules).string.email = true];
      string phone_number = 4 [(validate.rules).string.pattern = "[+]?\\d+"];
    }

    message UserIdDto {
      uint64 id = 1 [(validate.rules).uint64.gte = 1];
    }

    message UserEmailDto {
      string email = 1 [(validate.rules).string.email = true];
    }

    service UserService {
      rpc CreateUser(CreateUserDto) returns (UserDto);
      rpc FindUserById(UserIdDto) returns (UserDto);
      rpc FindUserByEmail(UserEmailDto) returns (UserDto);
      rpc UpdateUser(UserDto) returns (UserDto);
      rpc DeleteUserById(UserIdDto) returns (google.protobuf.Empty);
      rpc FindAllUser(google.protobuf.Empty) returns (UserListDto);
    }
